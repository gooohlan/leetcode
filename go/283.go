package main

import "fmt"

func moveZeroes(nums []int) {
	for i, j := 0, 0; i < len(nums); i++ {
		if nums[i] != 0 {
			nums[i], nums[j] = nums[j], nums[i]
			j++
		}
	}
	fmt.Println(nums)
}

// 上面的解法都不难，如果还理解不了，我给你讲个故事吧。有两个人A和B，其中A有特异功能，水路，陆路他都能走，而B只能走陆路，不能走水路。题中数组为0的我们把它看做是水路，不为0的我们可以把它看做是陆路，A和B同时出发，走的时候，无论是水路还是陆路，A都会往前走一步。而B只能遇到陆路才能走，遇到水路就掉到水里，走不动了，这个时候A可以继续走水路，当A往前走找到陆路的时候就把陆路踢到B的面前，然后B就可以继续走了。
//
//
//
// 这里就以示例 [0,1,0,3,12]为例，来看下A和B的对话。
//
//
// 初始状态：咱哥俩一起走
//
//
// 第1步
//
// B：兄弟救我，我掉进水里了。
// A：兄弟别急，我也在水里，我到前面找块陆地给你
// 第1步之后数组的值是[0,1,0,3,12]
//
//
//
// 第2步
//
// A：兄弟，我找到陆地1了，踢给你，你接着（把1踢给B）
// B：好嘞
// 第2步之后数组的值是[1,0,0,3,12]
//
//
//
// 第3步
//
// B：兄弟，我又掉进水里了
// A：别急，我也在水了，我在到前面看看有没有陆地，找块给你
// 第3步之后数组的值是[1,0,0,3,12]
//
//
//
// 第4步
//
// A：兄弟，我找到陆地3了，踢给你，你接着（把3踢给B）
// B：好嘞
// 第4步之后数组的值是[1,3,0,0,12]
//
//
//
// 第5步
//
// B：兄弟，我又掉水里了，快来救救我
// A：我现在在陆地12上面，我把它踢给你吧
// B：好嘞，谢了，兄弟
// 第5步之后数组的值是[1,3,12,0,0]
